
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ПользовательДляПодбора") Тогда
		ПользовательДляПодбора = Параметры.ПользовательДляПодбора;
		Элементы.ПользователиДляПодбора.Видимость = Ложь;
	Иначе
		КлючНастроек = "СписокПользователейДляНазначенияСтатей";
		МассивПользователей = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Справочник.БЗ_СтатьиБазыЗнаний", КлючНастроек);
		Если ЗначениеЗаполнено(МассивПользователей) Тогда
			ПользователиДляПодбора.ЗагрузитьЗначения(МассивПользователей);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СрокИзученияЧислом.Видимость = Ложь;
	Элементы.СрокИзученияДатой.Видимость = Ложь;
	
	ЗаполнитьСписок();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БЗ_КатегорииБазыЗнаний.Ссылка КАК Категория,
		|	СтатьиБазыЗнанийКатегории.Ссылка КАК Статья,
		|	НЕ БЗ_СостояниеСтатейБазыЗнаний.ВыданаНаИзучение ЕСТЬ NULL
		|		И (БЗ_СостояниеСтатейБазыЗнаний.ВыданаНаИзучение <> ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ БЗ_СостояниеСтатейБазыЗнаний.Изучена <> ДАТАВРЕМЯ(1, 1, 1)) КАК Выбран,
		|	НЕ БЗ_СостояниеСтатейБазыЗнаний.ВыданаНаИзучение ЕСТЬ NULL
		|		И (БЗ_СостояниеСтатейБазыЗнаний.ВыданаНаИзучение <> ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ БЗ_СостояниеСтатейБазыЗнаний.Изучена <> ДАТАВРЕМЯ(1, 1, 1)) КАК ЗапретИзменения
		|ИЗ
		|	Справочник.БЗ_КатегорииБазыЗнаний КАК БЗ_КатегорииБазыЗнаний
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БЗ_СтатьиБазыЗнаний.Категории КАК СтатьиБазыЗнанийКатегории
		|		ПО (СтатьиБазыЗнанийКатегории.Категория = БЗ_КатегорииБазыЗнаний.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_СостояниеСтатейБазыЗнаний КАК БЗ_СостояниеСтатейБазыЗнаний
		|		ПО (СтатьиБазыЗнанийКатегории.Ссылка = БЗ_СостояниеСтатейБазыЗнаний.СтатьяБазыЗнаний)
		|			И (БЗ_СостояниеСтатейБазыЗнаний.Пользователь = &Пользователь)
		|ГДЕ
		|	НЕ БЗ_КатегорииБазыЗнаний.ПометкаУдаления
		|	И НЕ СтатьиБазыЗнанийКатегории.Ссылка.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	БЗ_КатегорииБазыЗнаний.Наименование,
		|	СтатьиБазыЗнанийКатегории.Ссылка.ДатаСоздания
		|ИТОГИ ПО
		|	Категория ТОЛЬКО ИЕРАРХИЯ,
		|	Категория";
	
	Запрос.УстановитьПараметр("Пользователь", ПользовательДляПодбора);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаКатегория = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СоздатьЭлементыДереваРекурсивно(Список.ПолучитьЭлементы(), ВыборкаКатегория);
	
КонецПроцедуры

Процедура СоздатьЭлементыДереваРекурсивно(ЭлементыДерева, Выборка, ВсеВыбраны = Истина, ВсеЗапретИзменения = Истина, Категория = Неопределено)
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Статья <> NULL Тогда
			ЭлементДерева = ЭлементыДерева.Добавить();
			ЭлементДерева.Ссылка = Выборка.Статья;
			ЭлементДерева.Выбран = Выборка.Выбран;
			ЭлементДерева.ЗапретИзменения = Выборка.ЗапретИзменения;
			ЭлементДерева.ИндексКартинки = 1;
			
			ВсеВыбраны = Мин(ВсеВыбраны, Выборка.Выбран);
			ВсеЗапретИзменения = Мин(ВсеЗапретИзменения, Выборка.ЗапретИзменения);
		ИначеЕсли НЕ ЗначениеЗаполнено(Выборка.Категория) ИЛИ (Категория <> Неопределено И Выборка.Категория = Категория) Тогда
			ВыборкаКатегория = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			СоздатьЭлементыДереваРекурсивно(ЭлементыДерева, ВыборкаКатегория, ВсеВыбраны, ВсеЗапретИзменения, Категория);
		Иначе
			ЭлементДерева = ЭлементыДерева.Добавить();
			ЭлементДерева.Ссылка = Выборка.Категория;
			ЭлементДерева.ИндексКартинки = 0;
			
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
				ВыборкаКатегория = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Категория");
			ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				ВыборкаКатегория = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			КонецЕсли; 
			
			ПодчинённыеВсеВыбраны = Истина;
			ПодчинённыеВсеИзученны = Истина;
			СоздатьЭлементыДереваРекурсивно(ЭлементДерева.ПолучитьЭлементы(), ВыборкаКатегория, ПодчинённыеВсеВыбраны, ПодчинённыеВсеИзученны, Выборка.Категория);
			ЭлементДерева.Выбран = ПодчинённыеВсеВыбраны;
			ЭлементДерева.ЗапретИзменения = ПодчинённыеВсеИзученны;
			
			ВсеВыбраны = Мин(ВсеВыбраны, ЭлементДерева.Выбран);
			ВсеЗапретИзменения = Мин(ВсеЗапретИзменения, ЭлементДерева.ЗапретИзменения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборПриИзменении(Элемент)
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ЭлементыДерева = ТекДанные.ПолучитьЭлементы();
		ОтметитьЭлементыРекурсивно(ЭлементыДерева, ТекДанные.Выбран);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьЭлементыРекурсивно(ЭлементыДерева, Выбран)
	Если ЗначениеЗаполнено(ЭлементыДерева) Тогда
		Для каждого ЭлементДерева Из ЭлементыДерева Цикл
			Если НЕ ЭлементДерева.ЗапретИзменения Тогда
				ЭлементДерева.Выбран = Выбран;
				ОтметитьЭлементыРекурсивно(ЭлементДерева.ПолучитьЭлементы(), Выбран);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьПодбор(Команда)
	
	МассивРезультат = Новый Массив;
	ПолучитьВыбранныеРекурсивно(Список.ПолучитьЭлементы(), МассивРезультат);
	
	ЗаписатьСтатьиНаИзучение(МассивРезультат, ПользовательДляПодбора, ПользователиДляПодбора, СрокИзученияДатой);
	
	ЗаписатьОповещениеПользователей(МассивРезультат);
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БЗ_СостояниеСтатейБазыЗнаний"));
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВыбранныеРекурсивно(ЭлементыДерева, МассивРезультат)
	
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если НЕ ЭлементДерева.ЗапретИзменения Тогда
			Если ТипЗнч(ЭлементДерева.Ссылка) = Тип("СправочникСсылка.БЗ_СтатьиБазыЗнаний")	И
					ЭлементДерева.Выбран 													И
					НЕ ЭлементДерева.ЗапретИзменения										И
					МассивРезультат.Найти(ЭлементДерева.Ссылка) = Неопределено				Тогда
				
				МассивРезультат.Добавить(ЭлементДерева.Ссылка);
			Иначе
				ПолучитьВыбранныеРекурсивно(ЭлементДерева.ПолучитьЭлементы(), МассивРезультат);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьСтатьиНаИзучение(МассивРезультат, ПользовательДляПодбора, ПользователиДляПодбора, СрокИзученияДатой)
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Для каждого ЭлементМассива Из МассивРезультат Цикл
		Если ЗначениеЗаполнено(ПользовательДляПодбора) Тогда
			ЭлементМенеджераЗаписей = РегистрыСведений.БЗ_СостояниеСтатейБазыЗнаний.СоздатьМенеджерЗаписи();
			ЭлементМенеджераЗаписей.СтатьяБазыЗнаний = ЭлементМассива;
			ЭлементМенеджераЗаписей.Пользователь = ПользовательДляПодбора;
			ЭлементМенеджераЗаписей.ВыдалНаИзучение = ТекПользователь;
			ЭлементМенеджераЗаписей.ВыданаНаИзучение = ТекущаяДата();
			ЭлементМенеджераЗаписей.СрокИзучения = СрокИзученияДатой;
			ЭлементМенеджераЗаписей.Записать();
			
			////+++ АйТи: [Кашин Константин]
			//Если ЭлементМенеджераЗаписей.Пользователь <> ТекПользователь Тогда
			//	АйТи_ОбщиеПроцедурыИПодписки.ОповеститьОНовыхСтатьяхБазыЗнаний(ЭлементМенеджераЗаписей.Пользователь,
			//		ЭлементМассива, ЭлементМенеджераЗаписей.СрокИзучения, ТекущаяДата());
			//КонецЕсли;
		Иначе
			Для каждого ЭлементСписка Из ПользователиДляПодбора Цикл
				ЭлементМенеджераЗаписей = РегистрыСведений.БЗ_СостояниеСтатейБазыЗнаний.СоздатьМенеджерЗаписи();
				ЭлементМенеджераЗаписей.СтатьяБазыЗнаний = ЭлементМассива;
				ЭлементМенеджераЗаписей.Пользователь = ЭлементСписка.Значение;
				ЭлементМенеджераЗаписей.ВыдалНаИзучение = ТекПользователь;
				ЭлементМенеджераЗаписей.ВыданаНаИзучение = ТекущаяДата();
				ЭлементМенеджераЗаписей.СрокИзучения = СрокИзученияДатой;
				ЭлементМенеджераЗаписей.Записать();
				
				////+++ АйТи: [Кашин Константин]
				//Если ЭлементМенеджераЗаписей.Пользователь <> ТекПользователь Тогда
				//	АйТи_ОбщиеПроцедурыИПодписки.ОповеститьОНовыхСтатьяхБазыЗнаний(ЭлементМенеджераЗаписей.Пользователь,
				//		ЭлементМассива, ЭлементМенеджераЗаписей.СрокИзучения, ТекущаяДата());
				//КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаписатьСтатьиНаИзучение()

&НаКлиенте
Процедура ПользователиДляПодбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Выбранные", ПользователиДляПодбора.ВыгрузитьЗначения());
	
	ОП = Новый ОписаниеОповещения("ПослеПодбораПользователейДляОповещения", ЭтаФорма);
	ОткрытьФорму("Справочник.Пользователи.Форма.ВыборНесколькихПользователей", ПараметрыОткрытияФормы, ЭтаФорма,,,,ОП, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодбораПользователейДляОповещения(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПользователиДляПодбора.ЗагрузитьЗначения(Результат);
	КонецЕсли;
	
КонецПроцедуры // ПослеПодбораПользователейДляОповещения()

&НаКлиенте
Процедура УстановитьСрокИзученияПриИзменении(Элемент)
	
	Элементы.СрокИзученияЧислом.Видимость = УстановитьСрокИзучения;
	Элементы.СрокИзученияДатой.Видимость = УстановитьСрокИзучения;
КонецПроцедуры

&НаКлиенте
Процедура СрокИзученияЧисломПриИзменении(Элемент)
	СрокИзученияДатой = НачалоДня(ТекущаяДата()) + (СрокИзученияЧислом * 86400);
КонецПроцедуры

&НаКлиенте
Процедура СрокИзученияДатойПриИзменении(Элемент)
	СрокИзученияЧислом = (СрокИзученияДатой - НачалоДня(ТекущаяДата())) / 86400;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	КлючНастроек = "СписокПользователейДляНазначенияСтатей";
	БЗ_СохранитьНастройки(КлючНастроек, ПользователиДляПодбора.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура БЗ_СохранитьНастройки(КлючНастроек, ПользователиДляПодбора)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Справочник.БЗ_СтатьиБазыЗнаний", КлючНастроек, ПользователиДляПодбора);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОповещениеПользователей(МассивРезультат)
	
	Получатели = ПолучитьПользователейДляОповещения();
	
	Если Получатели.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обработанные = Новый Массив;
	НаборЗаписей = РегистрыСведений.БЗ_ОповещенияБазыЗнаний.СоздатьНаборЗаписей();
	Для Каждого ЭлементМассива Из Получатели Цикл
		Если Обработанные.Найти(ЭлементМассива) <> Неопределено или ЭлементМассива = Пользователи.ТекущийПользователь() Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ЭлементМассиваСтатья из МассивРезультат Цикл
			
			СтрОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Вам выдана на изучение статья: %1'"),
				Строка(ЭлементМассиваСтатья));
			ВидСобытия = 1;
			
			ЗаписьРегистра = НаборЗаписей.Добавить();
			ЗаписьРегистра.Пользователь		= ЭлементМассива;
			ЗаписьРегистра.ВидОповещения	= 1; // см. подсказку к измерению регистра
			ЗаписьРегистра.Идентификатор	= Новый УникальныйИдентификатор;
			ЗаписьРегистра.Объект			= ЭлементМассиваСтатья;
			ЗаписьРегистра.ВидСобытия		= ВидСобытия; // см. модуль менеджера регистра
			ЗаписьРегистра.Описание			= СтрОписание;
			
		КонецЦикла;
		
		Обработанные.Добавить(ЭлементМассива);
	КонецЦикла;
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПользователейДляОповещения()
	
	МассивПользователей = Новый Массив;
	
	Если ЗначениеЗаполнено(ПользовательДляПодбора) Тогда
		МассивПользователей.Добавить(ПользовательДляПодбора);
	Иначе
		Для каждого Строка из ПользователиДляПодбора Цикл
			МассивПользователей.Добавить(Строка.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивПользователей;
	
КонецФункции

