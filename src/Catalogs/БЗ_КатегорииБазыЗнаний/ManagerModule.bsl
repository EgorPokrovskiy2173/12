
Функция ПолучитьПолноеИмяКатегории(КатегорияБазыЗнаний) Экспорт
	
	Реквизиты	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КатегорияБазыЗнаний, "Наименование, Родитель");
	ПолноеИмя	= СокрЛП(Реквизиты.Наименование);
	
	Пока ЗначениеЗаполнено(Реквизиты.Родитель) Цикл
		Реквизиты	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КатегорияБазыЗнаний, "Наименование, Родитель");
		ПолноеИмя	= СокрЛП(Реквизиты.Наименование) + " >> " + ПолноеИмя;
	КонецЦикла;
	
	Возврат ПолноеИмя;
	
КонецФункции

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Рекурсия") Тогда			
			Для Каждого КлючИЗначение Из Параметры.Отбор Цикл
				НайденныйРеквизит = Метаданные.Справочники.Контрагенты.Реквизиты.Найти(КлючИЗначение.Ключ);
				Если НайденныйРеквизит = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Если НайденныйРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
					Параметры.Отбор.Удалить(КлючИЗначение.Ключ);
				КонецЕсли;
			КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
		Параметры.Вставить("Рекурсия");
		//СтандартныйСписок = ПолучитьДанныеВыбора(Параметры);
		СтандартныйСписок = Новый СписокЗначений;
		
		ДополнитьДанныеВыбора(СтандартныйСписок, Параметры.СтрокаПоиска);
		ДанныеВыбора = СтандартныйСписок;
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьДанныеВыбора(ДанныеВыбора, СтрокаПоиска)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БЗ_КатегорииБазыЗнаний.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Исключения
	|ИЗ
	|	Справочник.БЗ_КатегорииБазыЗнаний КАК БЗ_КатегорииБазыЗнаний
	|ГДЕ
	|	БЗ_КатегорииБазыЗнаний.НеПоказыватьДляВыбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	БЗ_КатегорииБазыЗнаний.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БЗ_КатегорииБазыЗнаний КАК БЗ_КатегорииБазыЗнаний
	|ГДЕ
	|	БЗ_КатегорииБазыЗнаний.Наименование ПОДОБНО &СтрокаПоиска
	|	И НЕ БЗ_КатегорииБазыЗнаний.Ссылка В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					ВТ_Исключения.Ссылка КАК Ссылка
	|				ИЗ
	|					ВТ_Исключения КАК ВТ_Исключения)
	|	И НЕ БЗ_КатегорииБазыЗнаний.ПометкаУдаления";
	
	
	СтрокаПоискаДляЗапроса =  "%"+СтрокаПоиска+"%";
	
	Запрос.УстановитьПараметр("СтрокаПоиска",     СтрокаПоискаДляЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеВыбора <> Неопределено И ДанныеВыбора.НайтиПоЗначению(Выборка.Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

