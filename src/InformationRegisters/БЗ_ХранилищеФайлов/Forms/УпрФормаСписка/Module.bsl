
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектОтбора = Параметры.Объект;
	ОбъектОтбораПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	л_ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтаФорма);
	//открыть диалог выбора файла. Если пользователь работает из ВебКлиента, то открывается соединение с типом "WebServerExtension"
	НачатьПомещениеФайла(л_ОписаниеОповещения,,, Истина,ЭтотОбъект.УникальныйИдентификатор);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкиХраненияФайлов()
	Возврат РегистрыСведений.БЗ_НастройкаХраненияФайлов.ПолучитьПоследнее();
КонецФункции // ПолучитьНастройкиХраненияФайлов()

&НаКлиенте
Функция ПолучитьРасширение(ИмяФайла)

	л_МассивЧастейИмени=СтрРазделить(ИмяФайла,".");

	Возврат "."+л_МассивЧастейИмени[л_МассивЧастейИмени.ВГраница()];
	
КонецФункции // ПолучитьРасширение()

&НаКлиенте
Функция ПолучитьИмяБезРасширения(ИмяФайла)
	
	л_ИмяБезРасширения="";
	
	л_МассивЧастейИмени=СтрРазделить(ИмяФайла,".");
	Для л_Сч=0 По л_МассивЧастейИмени.ВГраница()-1 Цикл //цикл по всем частям кроме последней, где расширение имени
		л_ЧастьИмени=л_МассивЧастейИмени[л_Сч];
		л_ИмяБезРасширения=л_ИмяБезРасширения+"."+л_ЧастьИмени;
	КонецЦикла;
	
	Возврат Прав(л_ИмяБезРасширения,СтрДлина(л_ИмяБезРасширения)-1); //удалить первую точку в имени
	
КонецФункции // ПолучитьРасширение()

&НаКлиенте
Процедура ОбработкаВыбораФайла(ЕстьВыборПользователя,Адрес,ВыбранноеИмяФайла,ДопПараметры)Экспорт 
    Если ЕстьВыборПользователя = Ложь Тогда
        Возврат;
    КонецЕсли;
	
	//Сообщить("Тип клиента: "+ПолучитьТипКлиента());

	Если ПолучитьТипКлиента() = "WebServerExtension" Тогда
		//в параметре "ВыбранноеИмяФайла" строка имени файла без полного пути, например: name.ext
		л_ОписаниеФайла=Новый Структура();
		л_ОписаниеФайла.Вставить("Имя",ВыбранноеИмяФайла);
		л_ОписаниеФайла.Вставить("ИмяБезРасширения",ПолучитьИмяБезРасширения(ВыбранноеИмяФайла));
		л_ОписаниеФайла.Вставить("ПолноеИмя","");
		л_ОписаниеФайла.Вставить("Путь","");
		л_ОписаниеФайла.Вставить("Расширение",ПолучитьРасширение(ВыбранноеИмяФайла));
		л_ОписаниеФайла.Вставить("Размер",ПолучитьИзВременногоХранилища(Адрес).Размер());
		//л_ОписаниеФайла.Вставить("АдресВременногоХранилища",Адрес);

		л_Отказ=Ложь;
		л_Сообщение="";
		л_КлючЗаписи=Новый Структура("ОбъектУИД,ОбъектСсылка,МестоХраненияФайлов,ИмяФайла,РасширениеИмениФайла,Автор");
	
		ДобавитьВложенныйФайл(Адрес,ОбъектОтбора,л_ОписаниеФайла,л_Отказ,,л_КлючЗаписи,л_Сообщение);
		
		Если НЕ л_Отказ Тогда 
			ЭтаФорма.ОтобразитьИзменениеДанных(л_КлючЗаписи,ВидИзмененияДанных.Добавление);
			Оповестить("ОбновитьСтрокуПрикреплений",л_ОписаниеФайла.Имя,ЭтаФорма);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(л_Сообщение) Тогда
			Сообщить(л_Сообщение);
		КонецЕсли;
		
	Иначе 		
		
		л_Файл=Новый Файл(ВыбранноеИмяФайла);
		л_ОписаниеФайла=Новый Структура("Имя,ИмяБезРасширения,ПолноеИмя,Путь,Расширение");
		ЗаполнитьЗначенияСвойств(л_ОписаниеФайла,л_Файл);
		л_ОписаниеФайла.Вставить("Размер",0);
		л_ОписаниеФайла.Вставить("Файл",л_Файл);
		л_ОписаниеФайла.Вставить("АдресВременногоХранилища",Адрес);
		
		л_Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПослеПроверкиСуществованияФайла",ЭтаФорма,	л_ОписаниеФайла));
		
	КонецЕсли;
	
КонецПроцедуры // ПослеПомещенияФайлаВоВременноеХранилище()

&НаКлиенте
Процедура ПослеПроверкиСуществованияФайла(ФайлСуществует,ПараметрыФайла)Экспорт 
	
	Если ФайлСуществует Тогда 

		ПараметрыФайла.Файл.НачатьПолучениеРазмера(Новый ОписаниеОповещения("ПослеПолученияРазмераФайла",ЭтаФорма,ПараметрыФайла));
		
	Иначе 
		
		Сообщить("Папка "+ПараметрыФайла.Путь+" не существует!");
		
	КонецЕсли;
КонецПроцедуры // ПослеПроверкиСуществованияФайла()

&НаКлиенте
Процедура ПослеПолученияРазмераФайла(Результат,Параметр)Экспорт 
	Параметр.Размер = Результат;
	
	//удалить свойство структуры "Файл" т.к. оно вызывает ошибку преобразования данных XDTO: Отсутствует отображение для типа 'Файл'
	Параметр.Удалить("Файл");
	
	л_Отказ=Ложь;
	л_Сообщение="";
	л_КлючЗаписи=Новый Структура("ОбъектУИД,ОбъектСсылка,МестоХраненияФайлов,ИмяФайла,РасширениеИмениФайла,Автор");
	
	ДобавитьВложенныйФайл(Параметр.АдресВременногоХранилища, ОбъектОтбора, Параметр, л_Отказ, , л_КлючЗаписи, л_Сообщение);
		
	Если НЕ л_Отказ Тогда 
		ЭтаФорма.ОтобразитьИзменениеДанных(л_КлючЗаписи,ВидИзмененияДанных.Добавление);
		Оповестить("ОбновитьСтрокуПрикреплений",Параметр.Имя,ЭтаФорма);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(л_Сообщение) Тогда
		Сообщить(л_Сообщение);
	КонецЕсли;
КонецПроцедуры // ПолучитьРазмерФайла()

&НаСервере
Процедура ДобавитьВложенныйФайл(знач п_АдресВременногоХранилища, знач п_Объект, знач п_Файл, п_Отказ, п_ИзменитьСуществующуюЗапись=Ложь, п_КлючЗаписи="", Сообщение="")
	Если НЕ ЗначениеЗаполнено(п_Объект) Тогда 
		п_Отказ=Истина;
		Сообщение="Сначала сохраните новый объект";
		Возврат;
	КонецЕсли;
	л_Дата = ТекущаяДата();	
	л_НастройкаХраненияФайлов=РегистрыСведений.БЗ_НастройкаХраненияФайлов.ПолучитьПоследнее(л_Дата);

	НачатьТранзакцию();
	Если л_НастройкаХраненияФайлов.МестоХраненияФайлов = Перечисления.БЗ_МестоХраненияПрикрепленныхФайлов.ОбщийДисковыйРесурс Тогда 
		Если п_Файл.Размер > л_НастройкаХраненияФайлов.МаксРазмерФайлаДляИБ Тогда 
			п_Отказ=Истина;
			Сообщение="Размер файла: "+п_Файл.Размер+" байт превышает максимальный размер установленный в настройках ("+л_НастройкаХраненияФайлов.МаксРазмерФайлаДляИБ+" байт)";
			УдалитьИзВременногоХранилища(п_АдресВременногоХранилища);
			ЗафиксироватьТранзакцию();
			Возврат;
		КонецЕсли;
		РегистрыСведений.БЗ_ХранилищеФайлов.СохранитьФайлНаДиск(п_АдресВременногоХранилища,л_НастройкаХраненияФайлов,п_Объект,п_Файл,п_Отказ,Сообщение);
		Если п_Отказ Тогда 
			УдалитьИзВременногоХранилища(п_АдресВременногоХранилища);
			ЗафиксироватьТранзакцию();
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если НЕ п_Отказ Тогда
		л_Запись=РегистрыСведений.БЗ_ХранилищеФайлов.СоздатьМенеджерЗаписи();
		Если ТипЗнч(п_КлючЗаписи) = Тип("Структура") И п_КлючЗаписи.Свойство("ОбъектСсылка") И ЗначениеЗаполнено(п_КлючЗаписи.ОбъектСсылка) Тогда
			ЗаполнитьЗначенияСвойств(л_Запись,п_КлючЗаписи);
			л_Запись.Прочитать();
		КонецЕсли;
		РегистрыСведений.БЗ_ХранилищеФайлов.ДобавитьЗаписьВРегистр(л_Дата,п_Объект,п_Файл,л_НастройкаХраненияФайлов,п_Отказ,п_ИзменитьСуществующуюЗапись,л_Запись,Сообщение, п_АдресВременногоХранилища);
		Если п_Отказ Тогда 
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		п_КлючЗаписи=РегистрыСведений.БЗ_ХранилищеФайлов.ПолучитьКлючЗаписи(п_Объект,п_Файл,л_НастройкаХраненияФайлов);
	КонецЕсли;
	УдалитьИзВременногоХранилища(п_АдресВременногоХранилища);
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВложенныйФайл(Команда)
	Если НЕ ДоступноУдаление() Тогда 	
		Сообщить("Вам не доступно удаление");
		Возврат;
	КонецЕсли;
	л_КлючЗаписи = ЭтаФорма.Элементы.Список.ТекущаяСтрока;
	Если л_КлючЗаписи <> Неопределено Тогда 
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеОтветаНаВопрос",ЭтаФорма),
		"Уверены, что хотите удалить файл "+ЭтаФорма.Элементы.Список.ТекущиеДанные.ИмяФайла+"."+ЭтаФорма.Элементы.Список.ТекущиеДанные.РасширениеИмениФайла+" ?",
		РежимДиалогаВопрос.ДаНет,15,КодВозвратаДиалога.Нет,"Удаление прикрепленного файла");
	КонецЕсли;
КонецПроцедуры // УдалитьВложенныйФайл()

&НаСервереБезКонтекста
Функция ДоступноУдаление()
	
	//Если НЕ РольДоступна("УдалениеПрикрепленныхФайлов") И Не РольДоступна("ПолныеПрава") Тогда 
	//	Возврат Ложь;
	//КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ДоступноУдаление()

&НаКлиенте
Процедура ПослеОтветаНаВопрос(ВыборПользователя,ДополнительныеПараметры)Экспорт 
	Если ВыборПользователя = КодВозвратаДиалога.Да Тогда 
		л_Отказ=Ложь;
		л_Сообщение="";
		л_КлючЗаписи = ЭтаФорма.Элементы.Список.ТекущаяСтрока;
		Если л_КлючЗаписи <> Неопределено Тогда 
			УдалитьФайл(л_КлючЗаписи,л_Отказ,л_Сообщение);
			Если л_Отказ Тогда 
				Сообщить(л_Сообщение);
			Иначе 
				ЭтаФорма.ОтобразитьИзменениеДанных(л_КлючЗаписи,ВидИзмененияДанных.Удаление);
				Оповестить("ОбновитьСтрокуПрикреплений",,ЭтаФорма);
			КонецЕсли;
		Иначе 
			Сообщить("Выберите файл для удаления");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПослеОтветаНаВопрос()

&НаСервереБезКонтекста
Процедура УдалитьФайл(Знач КлючЗаписи,Отказ,Сообщение)
	НачатьТранзакцию();
	РегистрыСведений.БЗ_ХранилищеФайлов.УдалитьФайлСДиска(КлючЗаписи,Отказ,Сообщение);
	Если Отказ Тогда 
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	РегистрыСведений.БЗ_ХранилищеФайлов.УдалитьЗаписьИзРегистра(КлючЗаписи,Отказ,Сообщение);
	Если Отказ Тогда 
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	ЗафиксироватьТранзакцию();                             
КонецПроцедуры // УдалитьВложенныйФайл()

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ЗапуститьОткрытиеФайла();
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФайла(Параметр1,Параметр2)Экспорт 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФайла(Знач КлючЗаписи)
	л_ИмяФайла=Новый Структура();
	
	л_Запись=РегистрыСведений.БЗ_ХранилищеФайлов.ПолучитьЗапись(КлючЗаписи);
	л_ИмяФайла.Вставить("ИмяФайла",л_Запись.ИмяФайла);
	л_ИмяФайла.Вставить("РасширениеИмениФайла",л_Запись.РасширениеИмениФайла);
	л_ИмяФайла.Вставить("ПутьФайла",л_Запись.ПутьФайла);
	
	Возврат л_ИмяФайла;
КонецФункции // ПолучитьИмяФайла()

&НаСервереБезКонтекста
Функция ПолучитьАдресВХранилище(КлючЗаписи)

	Возврат РегистрыСведений.БЗ_ХранилищеФайлов.ПолучитьАдресФайлаВоВременномХранилище(КлючЗаписи);

КонецФункции // ПолучитьАдресВХранилище()

&НаКлиенте
Процедура ЗапуститьОткрытиеФайла()
	л_КлючЗаписи = ЭтаФорма.Элементы.Список.ТекущаяСтрока;
	Если л_КлючЗаписи = Неопределено Тогда 
		Сообщить("Выберите файл для просмотра!");
		Возврат;
	КонецЕсли;
	
	л_ИмяФайла=ПолучитьИмяФайла(л_КлючЗаписи);
	л_Параметр=Новый Структура();
	л_Параметр.Вставить("ИмяФайла",л_ИмяФайла);
	л_Параметр.Вставить("КлючЗаписи",л_КлючЗаписи);
	
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВременныхФайлов",ЭтаФорма,л_Параметр));
	
КонецПроцедуры // ЗапуститьОткрытиеФайла()

&НаКлиенте
Процедура ПослеПолученияКаталогаВременныхФайлов(ИмяКаталога,Параметр)Экспорт 
	
	л_ИмяВременногоФайла=ИмяКаталога+Параметр.ИмяФайла.ИмяФайла+Параметр.ИмяФайла.РасширениеИмениФайла;
	
	//Сообщить("Тип клиента: "+ПолучитьТипКлиента());
	
	Если ПолучитьТипКлиента() = "WebServerExtension" Тогда
		л_ИмяВременногоФайла=""+Параметр.ИмяФайла.ИмяФайла+Параметр.ИмяФайла.РасширениеИмениФайла;
	КонецЕсли;	
	
	л_АдресВремХран = ПолучитьАдресВХранилище(Параметр.КлючЗаписи);
	
	Если НЕ ПустаяСтрока(л_АдресВремХран) Тогда 
		ПолучитьФайл(л_АдресВремХран,л_ИмяВременногоФайла,Истина);
		//УдалитьИзВременногоХранилища(л_АдресВремХран);
	КонецЕсли;
	
КонецПроцедуры // ПослеПолученияКаталогаВременныхФайлов()

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ЗапуститьОткрытиеФайла();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("РасширениеПоключено", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура РасширениеПоключено(ЕстьПодключение, Параметр)Экспорт 
	Если ЕстьПодключение Тогда 

	Иначе 
		НачатьУстановкуРасширенияРаботыСФайлами();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	л_КлючЗаписи = ЭтаФорма.Элементы.Список.ТекущаяСтрока;
	Если л_КлючЗаписи = Неопределено Тогда 
		Сообщить("Выберите файл для сохранения!");
		Возврат;
	КонецЕсли;
	
	л_ИмяФайла=ПолучитьИмяФайла(л_КлючЗаписи);
	л_Параметр=Новый Структура();
	л_Параметр.Вставить("ИмяФайла",л_ИмяФайла);
	л_Параметр.Вставить("КлючЗаписи",л_КлючЗаписи);
	
	
	АдресВременногоХранилища="";
	НачальноеИмяФайла=л_ИмяФайла.ПутьФайла+"\"+л_ИмяФайла.ИмяФайла+л_ИмяФайла.РасширениеИмениФайла;
	ВыбранноеИмяФайла="";
	Интерактивно=Ложь;
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ПослеОкончанияПомещения",ЭтаФорма),АдресВременногоХранилища,НачальноеИмяФайла, Интерактивно, ЭтаФорма.УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияПомещения(ЕстьВыборПользователя,АдресВременногоХранилища,ВыбранноеИмяФайла,ДопонительныеПараметры)Экспорт 
	Если НЕ ЕстьВыборПользователя Тогда 
		Возврат;
	КонецЕсли;
	
	ПолучитьФайл(АдресВременногоХранилища,ВыбранноеИмяФайла,Истина);
	
КонецПроцедуры // ПослеОкончанияПомещения()

&НаСервереБезКонтекста
Функция ПолучитьТипКлиента()
	л_ИмяПриложения="";
	
    л_Соединения=ПолучитьСоединенияИнформационнойБазы();
	Для Каждого л_Соединение Из л_Соединения Цикл 
		Если л_Соединение.НомерСоединения = НомерСоединенияИнформационнойБазы() Тогда 
			л_ИмяПриложения=л_Соединение.ИмяПриложения;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат л_ИмяПриложения;
КонецФункции

&НаСервере
Процедура ОбъектОтбораПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ОбъектОтбора) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОбъектУИД", ОбъектОтбора.УникальныйИдентификатор());
		Заголовок = "Список прикрепленных файлов к объекту " + ОбъектОтбора;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ОбъектУИД", Новый УникальныйИдентификатор);
		Заголовок = "Список прикрепленных файлов к объекту <НЕ УКАЗАН>";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОтбораПриИзменении(Элемент)
	ОбъектОтбораПриИзмененииНаСервере();
КонецПроцедуры
